; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️
; Jacking in...
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - File URLs in stacktrace frames are peekable and clickable.
; Jack-in done.
; Syntax error compiling at (moves.clj:84:1).
; Unable to resolve symbol: + in this context
[{:file "Compiler.java" :line 6808 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 3820 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7108 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 6120 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 5467 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 4029 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7104 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7173 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves=>
; Evaluating file: moves.clj
6
clj::chessjure.moves=>
; 30 tests finished, all passing 👍, ns: 1, vars: 2
clj::chessjure.moves=>
6
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; 30 tests finished, all passing 👍, ns: 1, vars: 2
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; 30 tests finished, all passing 👍, ns: 1, vars: 2
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; 30 tests finished, all passing 👍, ns: 1, vars: 2
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-line-of-sight
clj::chessjure.moves-test=>
; 38 tests finished, all passing 👍, ns: 1, vars: 2
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-line-of-sight
clj::chessjure.moves-test=>
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:142):
; path blocked by same colour pieces: to the left
; expected:
#{[:c :4]}
; actual:
(#{[:b :4] [:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:144):
; path blocked by same colour pieces: to the top left
; expected:
#{[:c :5]}
; actual:
(#{[:b :6] [:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:146):
; path blocked by same colour pieces: to the top
; expected:
#{[:d :5]}
; actual:
(#{[:d :5] [:d :6]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:148):
; path blocked by same colour pieces: to the top right
; expected:
#{[:e :5]}
; actual:
(#{[:e :5] [:f :6]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:150):
; path blocked by same colour pieces: to the right
; expected:
#{[:e :4]}
; actual:
(#{[:e :4] [:f :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:152):
; path blocked by same colour pieces: to the bottom right
; expected:
#{[:e :3]}
; actual:
(#{[:e :3] [:f :2]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:154):
; path blocked by same colour pieces: to the bottom
; expected:
#{[:d :3]}
; actual:
(#{[:d :3] [:d :2]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:156):
; path blocked by same colour pieces: to the bottom left
; expected:
#{[:c :3]}
; actual:
(#{[:c :3] [:b :2]})
; 46 tests finished, problems found. 😭 errors: 0, failures: 8, ns: 1, vars: 2
clj::chessjure.moves-test=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :4] [:c :4]} (line-of-sight board [:d :4] [-1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :6] [:c :5]} (line-of-sight board [:d :4] [-1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :5] [:d :6]} (line-of-sight board [:d :4] [0 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :5] [:f :6]} (line-of-sight board [:d :4] [1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :4] [:f :4]} (line-of-sight board [:d :4] [1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :3] [:f :2]} (line-of-sight board [:d :4] [1 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :3] [:d :2]} (line-of-sight board [:d :4] [0 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:c :3] [:b :2]} (line-of-sight board [:d :4] [-1 -1]))
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3]})
; 46 tests finished, problems found. 😭 errors: 8, failures: 8, ns: 1, vars: 2
clj::chessjure.moves=>
#'chessjure.moves-test/check-line-of-sight
clj::chessjure.moves-test=>
; Syntax error compiling at (moves_test.clj:142:25).
; Unable to resolve symbol: board in this context
[{:file "Compiler.java" :line 6808 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 3888 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7108 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 6120 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 5467 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 4029 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7104 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7173 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves-test=>
; Syntax error compiling at (moves_test.clj:142:25).
; Unable to resolve symbol: board in this context
[{:file "Compiler.java" :line 6808 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 3888 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7108 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 6120 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 5467 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 4029 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7104 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7173 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves-test=>
; Syntax error compiling at (moves_test.clj:142:25).
; Unable to resolve symbol: board in this context
[{:file "Compiler.java" :line 6808 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 3888 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7108 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 1020 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7106 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 7101 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 6120 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 5467 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 4029 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7104 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7173 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-line-of-sight
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :4] [:c :4]} (line-of-sight board [:d :4] [-1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :6] [:c :5]} (line-of-sight board [:d :4] [-1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :5] [:d :6]} (line-of-sight board [:d :4] [0 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :5] [:f :6]} (line-of-sight board [:d :4] [1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :4] [:f :4]} (line-of-sight board [:d :4] [1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :3] [:f :2]} (line-of-sight board [:d :4] [1 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :3] [:d :2]} (line-of-sight board [:d :4] [0 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:c :3] [:b :2]} (line-of-sight board [:d :4] [-1 -1]))
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3]})
; 46 tests finished, problems found. 😭 errors: 8, failures: 8, ns: 1, vars: 2
clj::chessjure.moves-test=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :4] [:c :4]} (line-of-sight board [:d :4] [-1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :6] [:c :5]} (line-of-sight board [:d :4] [-1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :5] [:d :6]} (line-of-sight board [:d :4] [0 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :5] [:f :6]} (line-of-sight board [:d :4] [1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :4] [:f :4]} (line-of-sight board [:d :4] [1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :3] [:f :2]} (line-of-sight board [:d :4] [1 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :3] [:d :2]} (line-of-sight board [:d :4] [0 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:c :3] [:b :2]} (line-of-sight board [:d :4] [-1 -1]))
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3]})
; 46 tests finished, problems found. 😭 errors: 8, failures: 8, ns: 1, vars: 2
clj::chessjure.moves=>
; Syntax error compiling at (moves_test.clj:117:33).
; Unable to resolve symbol: board in this context
[{:file "Compiler.java" :line 6808 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 3888 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7108 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 1020 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7106 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 7101 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 6120 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 5467 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 4029 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7104 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7173 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves-test=>
; Syntax error compiling at (moves_test.clj:117:33).
; Unable to resolve symbol: board in this context
[{:file "Compiler.java" :line 6808 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 3888 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7108 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 1020 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7106 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 7101 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 6120 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 5467 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 4029 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7104 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7173 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves-test=>
#'chessjure.moves-test/check-line-of-sight
clj::chessjure.moves-test=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :4] [:c :4]} (line-of-sight board [:d :4] [-1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :6] [:c :5]} (line-of-sight board [:d :4] [-1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :5] [:d :6]} (line-of-sight board [:d :4] [0 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :5] [:f :6]} (line-of-sight board [:d :4] [1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :4] [:f :4]} (line-of-sight board [:d :4] [1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :3] [:f :2]} (line-of-sight board [:d :4] [1 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :3] [:d :2]} (line-of-sight board [:d :4] [0 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:c :3] [:b :2]} (line-of-sight board [:d :4] [-1 -1]))
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3]})
; 46 tests finished, problems found. 😭 errors: 8, failures: 8, ns: 1, vars: 2
clj::chessjure.moves=>
; Syntax error compiling at (moves_test.clj:121:33).
; Unable to resolve symbol: board in this context
[{:file "Compiler.java" :line 6808 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 3888 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7108 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 6120 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 5467 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 4029 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7104 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7173 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves-test=>
#'chessjure.moves-test/board
clj::chessjure.moves-test=>
#{[:c :4]}
clj::chessjure.moves-test=>
#{[:c :4]}
clj::chessjure.moves-test=>
:black-queen
clj::chessjure.moves-test=>
; Syntax error compiling at (moves_test.clj:169:1).
; Unable to resolve symbol: piece-colour in this context
[{:file "Compiler.java" :line 6808 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 3820 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7108 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 6120 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 5467 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 4029 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7104 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7173 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves-test=>
; Syntax error compiling at (moves.clj:96:15).
; Unable to resolve symbol: board in this context
[{:file "Compiler.java" :line 6808 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 3888 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7108 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 3888 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7108 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 6120 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 5467 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 4029 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7104 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7173 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves=>
#'chessjure.moves/board
clj::chessjure.moves=>
:black
clj::chessjure.moves=>
:black
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-line-of-sight
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :4] [:c :4]} (line-of-sight board [:d :4] [-1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :6] [:c :5]} (line-of-sight board [:d :4] [-1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :5] [:d :6]} (line-of-sight board [:d :4] [0 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :5] [:f :6]} (line-of-sight board [:d :4] [1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :4] [:f :4]} (line-of-sight board [:d :4] [1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :3] [:f :2]} (line-of-sight board [:d :4] [1 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :3] [:d :2]} (line-of-sight board [:d :4] [0 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:c :3] [:b :2]} (line-of-sight board [:d :4] [-1 -1]))
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3]})
; 46 tests finished, problems found. 😭 errors: 8, failures: 8, ns: 1, vars: 2
clj::chessjure.moves-test=>
; Syntax error macroexpanding clojure.core/defn- at (moves.clj:108:1).
; board - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
board - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n :bodies] spec: :clojure.core.specs.alpha/params+body
[{:file "Compiler.java" :line 6971 :method "checkSpecs" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6987 :method "macroexpand1" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7074 :method "macroexpand" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7160 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves=>
; Evaluating file: moves.clj
; Syntax error macroexpanding clojure.core/defn- at (moves.clj:108:1).
; board - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
board - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n :bodies] spec: :clojure.core.specs.alpha/params+body
; Evaluation of file moves.clj failed: class clojure.lang.Compiler$CompilerException
; Syntax error macroexpanding clojure.core/defn- at (moves.clj:108:1).
; board - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
board - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n :bodies] spec: :clojure.core.specs.alpha/params+body
[{:file "Compiler.java" :line 6971 :method "checkSpecs" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6987 :method "macroexpand1" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7074 :method "macroexpand" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7160 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves=>
; Evaluating file: moves.clj
; Syntax error macroexpanding clojure.core/defn- at (moves.clj:108:1).
; board - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
board - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n :bodies] spec: :clojure.core.specs.alpha/params+body
; Evaluation of file moves.clj failed: class clojure.lang.Compiler$CompilerException
; Syntax error macroexpanding clojure.core/defn- at (moves.clj:108:1).
; board - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
board - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n :bodies] spec: :clojure.core.specs.alpha/params+body
[{:file "Compiler.java" :line 6971 :method "checkSpecs" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6987 :method "macroexpand1" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7074 :method "macroexpand" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7160 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves=>
; Evaluating file: moves.clj
; Syntax error macroexpanding clojure.core/defn- at (moves.clj:109:1).
; board - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
board - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n :bodies] spec: :clojure.core.specs.alpha/params+body
; Evaluation of file moves.clj failed: class clojure.lang.Compiler$CompilerException
; Syntax error macroexpanding clojure.core/defn- at (moves.clj:109:1).
; board - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
board - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n :bodies] spec: :clojure.core.specs.alpha/params+body
[{:file "Compiler.java" :line 6971 :method "checkSpecs" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6987 :method "macroexpand1" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7074 :method "macroexpand" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7160 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves=>
:white
clj::chessjure.moves=>
; Evaluating file: moves.clj
#{}
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :4] [:c :4]} (line-of-sight board [:d :4] [-1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :6] [:c :5]} (line-of-sight board [:d :4] [-1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :5] [:d :6]} (line-of-sight board [:d :4] [0 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :5] [:f :6]} (line-of-sight board [:d :4] [1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :4] [:f :4]} (line-of-sight board [:d :4] [1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :3] [:f :2]} (line-of-sight board [:d :4] [1 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :3] [:d :2]} (line-of-sight board [:d :4] [0 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:c :3] [:b :2]} (line-of-sight board [:d :4] [-1 -1]))
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3]})
; 46 tests finished, problems found. 😭 errors: 8, failures: 8, ns: 1, vars: 2
clj::chessjure.moves=>
#'chessjure.moves/add-if-opp-colour
clj::chessjure.moves=>
#{}
clj::chessjure.moves=>
; Evaluating file: moves.clj
[:black :white nil]
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :4] [:c :4]} (line-of-sight board [:d :4] [-1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :6] [:c :5]} (line-of-sight board [:d :4] [-1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :5] [:d :6]} (line-of-sight board [:d :4] [0 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :5] [:f :6]} (line-of-sight board [:d :4] [1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :4] [:f :4]} (line-of-sight board [:d :4] [1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :3] [:f :2]} (line-of-sight board [:d :4] [1 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :3] [:d :2]} (line-of-sight board [:d :4] [0 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:c :3] [:b :2]} (line-of-sight board [:d :4] [-1 -1]))
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
([:black :white nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
([:black :white nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
([:black :white nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
([:black :white nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
([:black :white nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
([:black :white nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
([:black :white nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
([:black :white nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:142):
; path blocked by same colour pieces: to the left
; expected:
#{[:c :4]}
; actual:
([:white :black nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:144):
; path blocked by same colour pieces: to the top left
; expected:
#{[:c :5]}
; actual:
([:white :black nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:146):
; path blocked by same colour pieces: to the top
; expected:
#{[:d :5]}
; actual:
([:white :black nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:148):
; path blocked by same colour pieces: to the top right
; expected:
#{[:e :5]}
; actual:
([:white :black nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:150):
; path blocked by same colour pieces: to the right
; expected:
#{[:e :4]}
; actual:
([:white :black nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:152):
; path blocked by same colour pieces: to the bottom right
; expected:
#{[:e :3]}
; actual:
([:white :black nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:154):
; path blocked by same colour pieces: to the bottom
; expected:
#{[:d :3]}
; actual:
([:white :black nil])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:156):
; path blocked by same colour pieces: to the bottom left
; expected:
#{[:c :3]}
; actual:
([:white :black nil])
; 46 tests finished, problems found. 😭 errors: 8, failures: 16, ns: 1, vars: 2
clj::chessjure.moves=>
#'chessjure.moves/add-if-opp-colour
clj::chessjure.moves=>
[:black :white nil]
clj::chessjure.moves=>
; Evaluating file: moves.clj
[:black :white nil [:b :4]]
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :4] [:c :4]} (line-of-sight board [:d :4] [-1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:b :6] [:c :5]} (line-of-sight board [:d :4] [-1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :5] [:d :6]} (line-of-sight board [:d :4] [0 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the top right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :5] [:f :6]} (line-of-sight board [:d :4] [1 1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :4] [:f :4]} (line-of-sight board [:d :4] [1 0]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom right
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:e :3] [:f :2]} (line-of-sight board [:d :4] [1 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:d :3] [:d :2]} (line-of-sight board [:d :4] [0 -1]))
; ERROR in chessjure.moves-test/check-line-of-sight (line 78):
; path blocked by pieces: to the bottom left
; error: java.lang.NullPointerException (moves.clj)
; expected:
(= #{[:c :3] [:b :2]} (line-of-sight board [:d :4] [-1 -1]))
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
([:black :white nil [:b :4]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
([:black :white nil [:b :6]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
([:black :white nil [:d :6]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
([:black :white nil [:f :6]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
([:black :white nil [:f :4]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
([:black :white nil [:f :2]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
([:black :white nil [:d :2]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
([:black :white nil [:b :2]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:142):
; path blocked by same colour pieces: to the left
; expected:
#{[:c :4]}
; actual:
([:white :black nil [:b :4]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:144):
; path blocked by same colour pieces: to the top left
; expected:
#{[:c :5]}
; actual:
([:white :black nil [:b :6]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:146):
; path blocked by same colour pieces: to the top
; expected:
#{[:d :5]}
; actual:
([:white :black nil [:d :6]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:148):
; path blocked by same colour pieces: to the top right
; expected:
#{[:e :5]}
; actual:
([:white :black nil [:f :6]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:150):
; path blocked by same colour pieces: to the right
; expected:
#{[:e :4]}
; actual:
([:white :black nil [:f :4]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:152):
; path blocked by same colour pieces: to the bottom right
; expected:
#{[:e :3]}
; actual:
([:white :black nil [:f :2]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:154):
; path blocked by same colour pieces: to the bottom
; expected:
#{[:d :3]}
; actual:
([:white :black nil [:d :2]])
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:156):
; path blocked by same colour pieces: to the bottom left
; expected:
#{[:c :3]}
; actual:
([:white :black nil [:b :2]])
; 46 tests finished, problems found. 😭 errors: 8, failures: 16, ns: 1, vars: 2
clj::chessjure.moves=>
[:black :white nil [:b :4]]
clj::chessjure.moves=>
#'chessjure.moves/add-if-opp-colour
clj::chessjure.moves=>
[:black :white :white-pawn [:b :4]]
clj::chessjure.moves=>
#'chessjure.moves/add-if-opp-colour
clj::chessjure.moves=>
[:black :white nil [:b :4]]
clj::chessjure.moves=>
:white
clj::chessjure.moves=>
#'chessjure.moves/add-if-opp-colour
clj::chessjure.moves=>
[:black :white :white-pawn [:b :4]]
clj::chessjure.moves=>
#'chessjure.moves/add-if-opp-colour
clj::chessjure.moves=>
:white
clj::chessjure.moves=>
[:white-pawn nil]
clj::chessjure.moves=>
#'chessjure.pieces/piece-colour
clj::chessjure.pieces=>
:white
clj::chessjure.moves=>
#'chessjure.moves/add-if-opp-colour
clj::chessjure.moves=>
#'chessjure.moves/board
clj::chessjure.moves=>
[:white-pawn nil]
clj::chessjure.moves=>
#'chessjure.moves/add-if-opp-colour
clj::chessjure.moves=>
[:white-pawn nil true]
clj::chessjure.moves=>
#'chessjure.moves/add-if-opp-colour
clj::chessjure.moves=>
[:white-pawn nil true]
clj::chessjure.moves=>
#'chessjure.moves/add-if-opp-colour
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:88):
; path blocked by pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:90):
; path blocked by pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:92):
; path blocked by pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:94):
; path blocked by pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:96):
; path blocked by pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:98):
; path blocked by pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:100):
; path blocked by pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:102):
; path blocked by pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3]})
; 46 tests finished, problems found. 😭 errors: 0, failures: 16, ns: 1, vars: 2
clj::chessjure.moves=>
#{}
clj::chessjure.moves=>
:white
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:88):
; path blocked by pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:90):
; path blocked by pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:92):
; path blocked by pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:94):
; path blocked by pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:96):
; path blocked by pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:98):
; path blocked by pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:100):
; path blocked by pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:102):
; path blocked by pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3]})
; 46 tests finished, problems found. 😭 errors: 0, failures: 8, ns: 1, vars: 2
clj::chessjure.moves=>
nil
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:88):
; path blocked by pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:90):
; path blocked by pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:92):
; path blocked by pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:94):
; path blocked by pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:96):
; path blocked by pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:98):
; path blocked by pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:100):
; path blocked by pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:102):
; path blocked by pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3]})
; 46 tests finished, problems found. 😭 errors: 0, failures: 8, ns: 1, vars: 2
clj::chessjure.moves=>
#'chessjure.moves/board
clj::chessjure.moves=>
#{[:b :4]}
clj::chessjure.moves=>
#{}
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; 46 tests finished, all passing 👍, ns: 1, vars: 2
clj::chessjure.moves=>
#'chessjure.moves/add-if-opp-colour
clj::chessjure.moves=>
#{[:b :4]}
clj::chessjure.moves=>
#'chessjure.moves/add-if-opp-colour
clj::chessjure.moves=>
#{[:b :4]}
clj::chessjure.moves=>
#'chessjure.moves/add-if-opp-colour
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:88):
; path blocked by pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4] [[:b :4] nil]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:90):
; path blocked by pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[[:b :6] nil] [:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:92):
; path blocked by pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[[:d :6] nil] [:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:94):
; path blocked by pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[[:f :6] nil] [:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:96):
; path blocked by pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4] [[:f :4] nil]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:98):
; path blocked by pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3] [[:f :2] nil]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:100):
; path blocked by pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[[:d :2] nil] [:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:102):
; path blocked by pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3] [[:b :2] nil]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4] [[:b :4] :black]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[[:b :6] :black] [:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[[:d :6] :black] [:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[[:f :6] :black] [:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[[:f :4] :black] [:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3] [[:f :2] :black]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[[:d :2] :black] [:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3] [[:b :2] :black]})
; 46 tests finished, problems found. 😭 errors: 0, failures: 16, ns: 1, vars: 2
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:88):
; path blocked by pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[[:b :4]] [:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:90):
; path blocked by pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5] [[:b :6]]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:92):
; path blocked by pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[[:d :6]] [:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:94):
; path blocked by pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[[:f :6]] [:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:96):
; path blocked by pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4] [[:f :4]]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:98):
; path blocked by pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3] [[:f :2]]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:100):
; path blocked by pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3] [[:d :2]]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:102):
; path blocked by pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[[:b :2]] [:c :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[[:b :4]] [:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5] [[:b :6]]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[[:d :6]] [:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[[:f :6]] [:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4] [[:f :4]]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3] [[:f :2]]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3] [[:d :2]]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[[:b :2]] [:c :3]})
; 46 tests finished, problems found. 😭 errors: 0, failures: 16, ns: 1, vars: 2
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; 46 tests finished, all passing 👍, ns: 1, vars: 2
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; 46 tests finished, all passing 👍, ns: 1, vars: 2
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-line-of-sight
clj::chessjure.moves-test=>
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:162):
; path blocked by king: to the left
; expected:
#{[:c :4]}
; actual:
(#{[:b :4] [:c :4]})
; 47 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 2
clj::chessjure.moves-test=>
; Evaluating file: pieces.clj
#'chessjure.pieces/king?
clj::chessjure.pieces=>
; 26 tests finished, all passing 👍, ns: 1, vars: 3
clj::chessjure.pieces=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; Running tests for chessjure.moves...
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3]})
; 47 tests finished, problems found. 😭 errors: 0, failures: 8, ns: 1, vars: 2
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3]})
; 47 tests finished, problems found. 😭 errors: 0, failures: 8, ns: 1, vars: 2
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:115):
; path blocked by opposite colour pieces: to the left
; expected:
#{[:b :4] [:c :4]}
; actual:
(#{[:c :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:117):
; path blocked by opposite colour pieces: to the top left
; expected:
#{[:b :6] [:c :5]}
; actual:
(#{[:c :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:119):
; path blocked by opposite colour pieces: to the top
; expected:
#{[:d :5] [:d :6]}
; actual:
(#{[:d :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:121):
; path blocked by opposite colour pieces: to the top right
; expected:
#{[:e :5] [:f :6]}
; actual:
(#{[:e :5]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:123):
; path blocked by opposite colour pieces: to the right
; expected:
#{[:e :4] [:f :4]}
; actual:
(#{[:e :4]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:125):
; path blocked by opposite colour pieces: to the bottom right
; expected:
#{[:e :3] [:f :2]}
; actual:
(#{[:e :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:127):
; path blocked by opposite colour pieces: to the bottom
; expected:
#{[:d :3] [:d :2]}
; actual:
(#{[:d :3]})
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:129):
; path blocked by opposite colour pieces: to the bottom left
; expected:
#{[:c :3] [:b :2]}
; actual:
(#{[:c :3]})
; 47 tests finished, problems found. 😭 errors: 0, failures: 8, ns: 1, vars: 2
clj::chessjure.moves=>
#{}
clj::chessjure.moves=>
#'chessjure.moves/board
clj::chessjure.moves=>
#{}
clj::chessjure.moves=>
#{}
clj::chessjure.moves=>
#'chessjure.moves/board
clj::chessjure.moves=>
#{}
clj::chessjure.moves=>
:false
clj::chessjure.moves=>
false
clj::chessjure.moves=>
false
clj::chessjure.moves=>
:false
clj::chessjure.moves=>
false
clj::chessjure.moves=>
:false
clj::chessjure.moves=>
; Evaluating file: pieces.clj
#'chessjure.pieces/king?
clj::chessjure.pieces=>
; 26 tests finished, all passing 👍, ns: 1, vars: 3
clj::chessjure.pieces=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; 47 tests finished, all passing 👍, ns: 1, vars: 2
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; 47 tests finished, all passing 👍, ns: 1, vars: 2
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/line-of-sight
clj::chessjure.moves=>
; FAIL in chessjure.moves-test/check-line-of-sight (moves_test.clj:162):
; path blocked by king: to the left
; expected:
#{[:c :4]}
; actual:
(#{[:b :4] [:c :4]})
; 47 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 2
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-line-of-sight
clj::chessjure.moves-test=>
; 46 tests finished, all passing 👍, ns: 1, vars: 2
clj::chessjure.moves-test=>
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; 46 tests finished, all passing 👍, ns: 1, vars: 2
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-line-of-sight
clj::chessjure.moves-test=>
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 53 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 3
clj::chessjure.moves-test=>
#'chessjure.moves/possible-moves
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-line-of-sight
clj::chessjure.moves-test=>
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 53 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 3
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
; Syntax error (IllegalStateException) compiling def at (moves_test.clj:134:1).
; possible-moves already refers to: #'chessjure.moves/possible-moves in namespace: chessjure.moves-test
; Evaluation of file moves_test.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: moves_test.clj
; Syntax error (IllegalStateException) compiling def at (moves_test.clj:134:1).
; possible-moves already refers to: #'chessjure.moves/possible-moves in namespace: chessjure.moves-test
; Evaluation of file moves_test.clj failed: class clojure.lang.Compiler$CompilerException

ERROR in () (AFn.java:429)
rook movement
expected: (= #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]} (possible-moves (test-with :black-rook) [:d :4] [-1 0]))
  actual: clojure.lang.ArityException: Wrong number of args (3) passed to: chessjure.board/board-put
 at clojure.lang.AFn.throwArity (AFn.java:429)
    clojure.lang.AFn.invoke (AFn.java:40)
    chessjure.moves_test$eval109277$test_with__109278.invoke (form-init4434113427263607987.clj:136)
    chessjure.moves_test$eval109277.invokeStatic (form-init4434113427263607987.clj:149)
    chessjure.moves_test$eval109277.invoke (form-init4434113427263607987.clj:135)
    clojure.lang.Compiler.eval (Compiler.java:7176)
    clojure.lang.Compiler.eval (Compiler.java:7131)
    clojure.core$eval.invokeStatic (core.clj:3214)
    clojure.core$eval.invoke (core.clj:3210)
    nrepl.middleware.interruptible_eval$evaluate$fn__993.invoke (interruptible_eval.clj:91)
    clojure.main$repl$read_eval_print__9068$fn__9071.invoke (main.clj:414)
    clojure.main$repl$read_eval_print__9068.invoke (main.clj:414)
    clojure.main$repl$fn__9077.invoke (main.clj:435)
    clojure.main$repl.invokeStatic (main.clj:435)
    clojure.main$repl.doInvo
ke (main.clj:345)
    clojure.lang.RestFn.invoke (RestFn.java:1523)
    nrepl.middleware.interruptible_eval$evaluate.invokeStatic (interruptible_eval.clj:84)
    nrepl.middleware.interruptible_eval$evaluate.invoke (interruptible_eval.clj:56)
    nrepl.middleware.interruptible_eval$interruptible_eval$fn__1019$fn__1023.invoke (interruptible_eval.clj:155)
    clojure.lang.AFn.run (AFn.java:22)
    nrepl.middleware.session$session_exec$main_loop__1120$fn__1124.invoke (session.clj:190)
    nrepl.middleware.session$session_exec$main_loop__1120.invoke (session.clj:189)
    clojure.lang.AFn.run (AFn.java:22)
    java.lang.Thread.run (Thread.java:832)
nil
clj::chessjure.moves-test=>
; Syntax error compiling at (moves_test.clj:149:28).
; Unable to resolve symbol: test-with in this context
[{:file "Compiler.java" :line 6808 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 3820 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7108 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 3888 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7108 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 3888 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7108 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 38 :method "access$300" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6384 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7106 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7094 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 6120 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 2314 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7106 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6745 :method "analyze" :flags [:dup :tooling :java]}
 {:file "Compiler.java" :line 6120 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 5467 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 4029 :method "parse" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7104 :method "analyzeSeq" :flags [:tooling :java]}
 {:file "Compiler.java" :line 6789 :method "analyze" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7173 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves-test=>
; Evaluating file: moves.clj
; Syntax error compiling at (moves.clj:85:3).
; Unable to resolve symbol: union in this context
; Evaluation of file moves.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 149):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: chessjure.board/board-put (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 54 tests finished, problems found. 😭 errors: 1, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 149):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 54 tests finished, problems found. 😭 errors: 1, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 149):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 54 tests finished, problems found. 😭 errors: 1, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 147):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 152):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 55 tests finished, problems found. 😭 errors: 2, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; Running tests for chessjure.moves-test...
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 154):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 159):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-rook) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 57 tests finished, problems found. 😭 errors: 4, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 154):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 159):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 57 tests finished, problems found. 😭 errors: 4, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 154):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 159):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 57 tests finished, problems found. 😭 errors: 4, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 154):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 159):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 57 tests finished, problems found. 😭 errors: 4, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 154):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 159):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 57 tests finished, problems found. 😭 errors: 4, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
; Syntax error reading source at (moves_test.clj:166:78).
; Duplicate key: [:c :3]
; Evaluation of file moves_test.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 174):
; pawn movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :white-pawn) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 177):
; pawn movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :black-pawn) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 61 tests finished, problems found. 😭 errors: 8, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
; Syntax error (IllegalArgumentException) compiling recur at (moves_test.clj:169:34).
; Mismatched argument count to recur, expected: 1 args, got: 3
; Evaluation of file moves_test.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; Running tests for chessjure.moves-test...
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 178):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.board/board-put (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 181):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.board/board-put (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-paw :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 185):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.board/board-put (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-paw :d :4) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 62 tests finished, problems found. 😭 errors: 9, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 178):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.board/board-put (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 181):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.board/board-put (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-paw :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 185):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.board/board-put (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-paw :d :4) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 62 tests finished, problems found. 😭 errors: 9, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Execution error (ArityException) at chessjure.moves/eval149913 (form-init4434113427263607987.clj:118).
; Wrong number of args (5) passed to: clojure.core/into
[{:file "AFn.java" :line 429 :method "throwArity" :flags [:java]}
 {:file "AFn.java" :line 48 :method "invoke" :flags [:java]}
 {:file "file:/home/jannik/Code/chessjure/src/chessjure/moves.clj:118" :fn "eval149913"  :method "invokeStatic" :flags [:project :repl :clj]}
 {:file "file:/home/jannik/Code/chessjure/src/chessjure/moves.clj:118" :fn "eval149913"  :method "invoke" :flags [:dup :project :repl :clj]}
 {:file "Compiler.java" :line 7176 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves=>
; Execution error (ArityException) at chessjure.moves/eval150045 (form-init4434113427263607987.clj:118).
; Wrong number of args (4) passed to: clojure.core/into
[{:file "AFn.java" :line 429 :method "throwArity" :flags [:java]}
 {:file "AFn.java" :line 44 :method "invoke" :flags [:java]}
 {:file "file:/home/jannik/Code/chessjure/src/chessjure/moves.clj:118" :fn "eval150045"  :method "invokeStatic" :flags [:project :repl :clj]}
 {:file "file:/home/jannik/Code/chessjure/src/chessjure/moves.clj:118" :fn "eval150045"  :method "invoke" :flags [:dup :project :repl :clj]}
 {:file "Compiler.java" :line 7176 :method "eval" :flags [:tooling :java]}
 {:file "Compiler.java" :line 7131 :method "eval" :flags [:dup :tooling :java]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3214" :fn "eval"  :method "invokeStatic" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj:3210" :fn "eval"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:91" :fn "evaluate/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:414" :fn "repl/read-eval-print"  :method "invoke" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl/fn"  :method "invoke" :flags [:clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:435" :fn "repl"  :method "invokeStatic" :flags [:dup :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/main.clj:345" :fn "repl"  :method "doInvoke" :flags [:clj]}
 {:file "RestFn.java" :line 1523 :method "invoke" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:84" :fn "evaluate"  :method "invokeStatic" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:56" :fn "evaluate"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/interruptible_eval.clj:155" :fn "interruptible-eval/fn/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:190" :fn "session-exec/main-loop/fn"  :method "invoke" :flags [:tooling :clj]}
 {:file "jar:file:/home/jannik/.m2/repository/nrepl/nrepl/0.7.0/nrepl-0.7.0.jar!/nrepl/middleware/session.clj:189" :fn "session-exec/main-loop"  :method "invoke" :flags [:tooling :clj]}
 {:file "AFn.java" :line 22 :method "run" :flags [:java]}
 {:file "Thread.java" :line 832 :method "run" :flags [:java]}]
clj::chessjure.moves=>
#{:baz :bar :foo}
clj::chessjure.moves=>
#{nil :baz :bar :foo}
clj::chessjure.moves=>
; Evaluating file: moves.clj
; Syntax error compiling at (moves.clj:116:3).
; Unable to resolve symbol: union in this context
; Evaluation of file moves.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: moves.clj
; Syntax error compiling at (moves.clj:116:3).
; Unable to resolve symbol: union in this context
; Evaluation of file moves.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 178):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.board/board-put (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 181):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.board/board-put (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-paw :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 185):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.board/board-put (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-paw :d :4) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 62 tests finished, problems found. 😭 errors: 9, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 178):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.board/board-put (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 181):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.board/board-put (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-paw :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 185):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.board/board-put (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-paw :d :4) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 62 tests finished, problems found. 😭 errors: 9, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 177):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: chessjure.board/board-put (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 180):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: chessjure.board/board-put (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-paw :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 184):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (3) passed to: chessjure.board/board-put (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-paw :d :4) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 62 tests finished, problems found. 😭 errors: 9, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 177):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 180):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-paw :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 184):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-paw :d :4) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 62 tests finished, problems found. 😭 errors: 9, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
#'chessjure.moves/foo
clj::chessjure.moves=>
:white-pawn
clj::chessjure.moves=>
#'chessjure.moves/foo
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 177):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 180):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 184):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 62 tests finished, problems found. 😭 errors: 9, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 177):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 180):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 184):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 62 tests finished, problems found. 😭 errors: 9, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves.clj
; Syntax error compiling at (moves.clj:57:45).
; Unable to resolve symbol: this-colour in this context
; Evaluation of file moves.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: moves.clj
; Syntax error compiling at (moves.clj:57:45).
; Unable to resolve symbol: this-colour in this context
; Evaluation of file moves.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 177):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 180):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 184):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 62 tests finished, problems found. 😭 errors: 9, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves.clj
; Syntax error compiling at (moves.clj:115:1).
; Unable to resolve symbol: result in this context
; Evaluation of file moves.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 177):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 180):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 184):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 62 tests finished, problems found. 😭 errors: 9, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 195):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 198):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 202):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 65 tests finished, problems found. 😭 errors: 12, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 195):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 198):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 202):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 65 tests finished, problems found. 😭 errors: 12, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 195):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 198):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 202):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 65 tests finished, problems found. 😭 errors: 12, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 218):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: chessjure.moves-test/fn--194930/test-with--195045 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 221):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: chessjure.moves-test/fn--194930/test-with--195045 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 225):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: chessjure.moves-test/fn--194930/test-with--195045 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 68 tests finished, problems found. 😭 errors: 15, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves.clj
; Syntax error compiling at (moves.clj:127:3).
; Unable to resolve symbol: new-pos+ in this context
; Evaluation of file moves.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 218):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: chessjure.moves-test/fn--214546/test-with--214661 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 221):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: chessjure.moves-test/fn--214546/test-with--214661 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 225):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (1) passed to: chessjure.moves-test/fn--214546/test-with--214661 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 68 tests finished, problems found. 😭 errors: 15, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 218):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 221):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 225):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 68 tests finished, problems found. 😭 errors: 15, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 218):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 221):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 225):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 68 tests finished, problems found. 😭 errors: 15, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 218):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 221):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 225):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 68 tests finished, problems found. 😭 errors: 15, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 218):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:e :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 221):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 225):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 68 tests finished, problems found. 😭 errors: 15, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 219):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:e :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 222):
; knight movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :7] [:e :8] [:e :4] [:c :4] [:c :8] [:f :7]}
 (possible-moves (test-with :white-knight) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 225):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 229):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 69 tests finished, problems found. 😭 errors: 16, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 218):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:e :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 221):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 224):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 228):
; knight movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :7] [:e :8] [:e :4] [:c :4] [:c :8] [:f :7]}
 (possible-moves
  (board-put (test-with :white-knight) :white-knight :d :6)
  [:d :6]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 69 tests finished, problems found. 😭 errors: 16, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 218):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:e :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 221):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 224):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 228):
; knight movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :7] [:e :8] [:c :4] [:c :8] [:f :7]}
 (possible-moves
  (board-put (test-with :white-knight) :white-knight :d :6)
  [:d :6]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 69 tests finished, problems found. 😭 errors: 16, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:e :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :7] [:e :8] [:c :4] [:c :8] [:f :7]}
 (possible-moves
  (board-put (test-with :white-knight) :white-knight :d :6)
  [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 251):
; king movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:f :8] [:f :6] [:h :6] [:h :8] [:g :6] [:h :7] [:g :8] [:f :7]}
 (possible-moves (test-with :white-king) [:g :7]))
; ERROR in chessjure.moves-test/check-possible-moves (line 254):
; king movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 257):
; king movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :5] [:f :6] [:h :6] [:g :7] [:h :7] [:f :5] [:f :7] [:h :5]}
 (possible-moves (test-with :black-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 260):
; king movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:g :4] [:f :5] [:f :3]}
 (possible-moves (test-with :white-king) [:f :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 264):
; king movement: cannot get close to other kings
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:a :6] [:c :6] [:a :5] [:b :6]}
 (possible-moves (test-with :white-king) [:b :5]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 74 tests finished, problems found. 😭 errors: 21, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves.clj
#'chessjure.moves/valid-move?
clj::chessjure.moves=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:e :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :7] [:e :8] [:c :4] [:c :8] [:f :7]}
 (possible-moves
  (board-put (test-with :white-knight) :white-knight :d :6)
  [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 251):
; king movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:f :8] [:f :6] [:h :6] [:h :8] [:g :6] [:h :7] [:g :8] [:f :7]}
 (possible-moves (test-with :white-king) [:g :7]))
; ERROR in chessjure.moves-test/check-possible-moves (line 254):
; king movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 257):
; king movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :5] [:f :6] [:h :6] [:g :7] [:h :7] [:f :5] [:f :7] [:h :5]}
 (possible-moves (test-with :black-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 260):
; king movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:g :4] [:f :5] [:f :3]}
 (possible-moves (test-with :white-king) [:f :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 264):
; king movement: cannot get close to other kings
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:a :6] [:c :6] [:a :5] [:b :6]}
 (possible-moves (test-with :white-king) [:b :5]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 74 tests finished, problems found. 😭 errors: 21, failures: 1, ns: 1, vars: 4
clj::chessjure.moves=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:e :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :7] [:e :8] [:c :4] [:c :8] [:f :7]}
 (possible-moves
  (board-put (test-with :white-knight) :white-knight :d :6)
  [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 251):
; king movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:f :8] [:f :6] [:h :6] [:h :8] [:g :6] [:h :7] [:g :8] [:f :7]}
 (possible-moves (test-with :white-king) [:g :7]))
; ERROR in chessjure.moves-test/check-possible-moves (line 254):
; king movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 257):
; king movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:c :3]} (possible-moves (test-with :black-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 261):
; king movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:g :4] [:f :5] [:f :3]}
 (possible-moves (test-with :white-king) [:f :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 73 tests finished, problems found. 😭 errors: 20, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:e :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :7] [:e :8] [:c :4] [:c :8] [:f :7]}
 (possible-moves
  (board-put (test-with :white-knight) :white-knight :d :6)
  [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 251):
; king movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:f :8] [:f :6] [:h :6] [:h :8] [:g :6] [:h :7] [:g :8] [:f :7]}
 (possible-moves (test-with :white-king) [:g :7]))
; ERROR in chessjure.moves-test/check-possible-moves (line 254):
; king movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 257):
; king movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :black-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 261):
; king movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:g :4] [:f :5] [:f :3]}
 (possible-moves (test-with :white-king) [:f :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 73 tests finished, problems found. 😭 errors: 20, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:e :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :7] [:e :8] [:c :4] [:c :8] [:f :7]}
 (possible-moves
  (board-put (test-with :white-knight) :white-knight :d :6)
  [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 251):
; king movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:f :8] [:f :6] [:h :6] [:h :8] [:g :6] [:h :7] [:g :8] [:f :7]}
 (possible-moves (test-with :white-king) [:g :7]))
; ERROR in chessjure.moves-test/check-possible-moves (line 254):
; king movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 257):
; king movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :black-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 261):
; king movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:g :4] [:f :5] [:f :3]}
 (possible-moves (test-with :white-king) [:f :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 73 tests finished, problems found. 😭 errors: 20, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:e :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :7] [:e :8] [:c :4] [:c :8] [:f :7]}
 (possible-moves
  (board-put (test-with :white-knight) :white-knight :d :6)
  [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 254):
; king movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:f :8] [:f :6] [:h :6] [:h :8] [:g :6] [:h :7] [:g :8] [:f :7]}
 (possible-moves (test-with :white-king) [:g :7]))
; ERROR in chessjure.moves-test/check-possible-moves (line 257):
; king movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 260):
; king movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :black-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 264):
; king movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:h :4] [:h :5] [:h :3]}
 (possible-moves (test-with :white-king) [:g :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 73 tests finished, problems found. 😭 errors: 20, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
; Syntax error compiling at (moves_test.clj:252:28).
; Unable to resolve symbol: black-king in this context
; Evaluation of file moves_test.clj failed: class clojure.lang.Compiler$CompilerException
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:e :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :7] [:e :8] [:c :4] [:c :8] [:f :7]}
 (possible-moves
  (board-put (test-with :white-knight) :white-knight :d :6)
  [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 253):
; king movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:f :8] [:f :6] [:h :6] [:h :8] [:g :6] [:h :7] [:g :8] [:f :7]}
 (possible-moves (test-with :white-king) [:g :7]))
; ERROR in chessjure.moves-test/check-possible-moves (line 256):
; king movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 259):
; king movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :black-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 262):
; king movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:h :4] [:h :5] [:h :3]}
 (possible-moves (test-with :white-king) [:g :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 266):
; king movement: cannot get close to other kings
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:a :7]} (possible-moves (test-with :white-king) [:a :8]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 74 tests finished, problems found. 😭 errors: 21, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
; Evaluating file: moves_test.clj
#'chessjure.moves-test/check-possible-moves
clj::chessjure.moves-test=>
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:d :3] [:e :4] [:d :5] [:c :4]}
 (possible-moves (test-with :white-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 146):
; rook movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:d :3] [:e :4] [:d :5] [:c :4] [:d :6] [:d :2] [:f :4]}
 (possible-moves (test-with :black-rook) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:c :5]}
 (possible-moves (test-with :white-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 153):
; bishop movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:f :6] [:b :2] [:f :2] [:b :6] [:c :5]}
 (possible-moves (test-with :black-bishop) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :white-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 160):
; queen movement
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :4] [:e :3] [:e :5] [:c :3] [:f :6] [:d :3] [:e :4] [:b :2]
   [:d :5] [:c :4] [:f :2] [:d :6] [:b :6] [:c :5] [:d :2] [:f :4]}
 (possible-moves (test-with :black-queen) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :4]} (possible-moves (test-with :white-pawn :d :3) [:d :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-pawn :e :3) [:e :3]))
; ERROR in chessjure.moves-test/check-possible-moves (line 168):
; white pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :5] [:d :5] [:c :5]}
 (possible-moves (test-with :white-pawn :d :4) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path free
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{[:d :5]} (possible-moves (test-with :black-pawn :d :6) [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: path blocked
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :black-pawn :e :6) [:e :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 186):
; black pawn movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :4] [:c :4] [:d :4]}
 (possible-moves (test-with :black-pawn :d :5) [:d :5]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:c :3] [:f :6] [:f :2] [:d :6] [:c :5] [:d :2]}
 (possible-moves (test-with :white-knight) [:e :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :6] [:c :2] [:b :3] [:b :5] [:f :5] [:c :6] [:f :3] [:e :2]}
 (possible-moves (test-with :black-knight) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 204):
; knight movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:b :7] [:e :8] [:c :4] [:c :8] [:f :7]}
 (possible-moves
  (board-put (test-with :white-knight) :white-knight :d :6)
  [:d :6]))
; ERROR in chessjure.moves-test/check-possible-moves (line 253):
; king movement: free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:f :8] [:f :6] [:h :6] [:h :8] [:g :6] [:h :7] [:g :8] [:f :7]}
 (possible-moves (test-with :white-king) [:g :7]))
; ERROR in chessjure.moves-test/check-possible-moves (line 256):
; king movement: no free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(= #{} (possible-moves (test-with :white-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 259):
; king movement: capture
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:e :3] [:e :5] [:c :3] [:d :3] [:e :4] [:d :5] [:c :4] [:c :5]}
 (possible-moves (test-with :black-king) [:d :4]))
; ERROR in chessjure.moves-test/check-possible-moves (line 263):
; king movement: some free spots
; error: clojure.lang.ArityException: Wrong number of args (2) passed to: chessjure.moves/eval102452/fn--102455 (AFn.java)
; expected:
(=
 #{[:g :3] [:g :5] [:h :4] [:h :5] [:h :3]}
 (possible-moves (test-with :white-king) [:g :4]))
; FAIL in chessjure.moves-test/move-rook (moves_test.clj:28):
; rook with same-colour pieces around: don't pass right
; expected:
(not (valid-piece-move? board [:d :4] [:g :4]))
; actual:
(not (not true))
; 73 tests finished, problems found. 😭 errors: 20, failures: 1, ns: 1, vars: 4
clj::chessjure.moves-test=>
